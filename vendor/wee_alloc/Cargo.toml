# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies
#
# If you believe there's an error in this file please file an
# issue against the rust-lang/cargo repository. If you're
# editing this file be aware that the upstream Cargo.toml
# will likely look very different (and much more reasonable)

[package]
name = "wee_alloc"
version = "0.4.5"
authors = ["Nick Fitzgerald <fitzgen@gmail.com>", "Sergey Pepyakin <s.pepyakin@gmail.com>", "Matt Howell <mjhowell@gmail.com>", "Zack Pierce <zachary.pierce@gmail.com>"]
description = "wee_alloc: The Wasm-Enabled, Elfin Allocator"
readme = "../README.md"
categories = ["memory-management", "web-programming", "no-std", "wasm", "embedded"]
license = "MPL-2.0"
repository = "https://github.com/rustwasm/wee_alloc"
[dependencies.cfg-if]
version = "0.1.2"

[dependencies.memory_units]
version = "0.4.0"

[dependencies.spin]
version = "0.5"
optional = true
default-features = false

[features]
default = ["size_classes"]
extra_assertions = []
nightly = []
size_classes = []
static_array_backend = ["spin"]
use_std_for_test_debugging = []
[target."cfg(all(unix, not(target_arch = \"wasm32\")))".dependencies.libc]
version = "0.2"
default-features = false
[target."cfg(target_os = \"windows\")".dependencies.winapi]
version = "0.3"
features = ["memoryapi", "synchapi", "winbase"]
[badges.travis-ci]
repository = "rustwasm/wee_alloc"
